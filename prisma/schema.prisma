// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String              @id @default(uuid())
  fullName   String
  userName   String              @unique
  password   String
  role       UserRole            @default(user)
  profileImg String?
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  menus      MenuPermission[]
  subMenus   SubMenuPermission[]
  sections   SectionPermission[]

  @@map("users")
}

model MenuPermission {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  label  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubMenuPermission {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  label  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SectionPermission {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  label  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id    String @id @default(uuid())
  label String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VehicleModel {
  id    String @id @default(uuid())
  label String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Driver {
  id       String    @id @default(uuid())
  driverId String    @unique
  name     String
  mobile   String
  address  String
  isActive Boolean   @default(true)
  trips    Trip[]
  vehicles Vehicle[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vehicle {
  id           String  @id @default(uuid())
  vehicleId    String  @unique
  regNo        String  @unique
  brand        String
  model        String?
  vehicleValue Int?

  driverId String?
  driver   Driver? @relation(fields: [driverId], references: [id])

  isActive Boolean @default(true)
  trips    Trip[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Party {
  id       String  @id @default(uuid())
  partyId  String  @unique
  name     String
  mobile   String
  address  String
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trip {
  id        String   @id @default(uuid())
  tripId    String   @unique
  startDate DateTime
  endDate   DateTime
  from      String
  to        String
  distance  Int
  tripValue Int

  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  driverId String
  driver   Driver @relation(fields: [driverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExpenseTitle {
  id    String @id @default(uuid())
  label String

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  expenseHeads ExpenseHead[]
}

model ExpenseHead {
  id             String       @id @default(uuid())
  label          String
  expenseTitleId String
  expenseTitle   ExpenseTitle @relation(fields: [expenseTitleId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Accessory {
  id    String @id @default(uuid())
  label String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ENUMS
enum UserRole {
  super_admin
  admin
  user
}

enum TripStatus {
  Upcoming
  Ongoing
  Completed
}
